// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: layout.proto at 5:1
package com.flipkart.android.proteus.models.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class Layout extends Message<Layout, Layout.Builder> {
  public static final ProtoAdapter<Layout> ADAPTER = new ProtoAdapter_Layout();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.flipkart.android.proteus.models.proto.Layout$View#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<View> view;

  public Layout(List<View> view) {
    this(view, ByteString.EMPTY);
  }

  public Layout(List<View> view, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.view = Internal.immutableCopyOf("view", view);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.view = Internal.copyOf("view", view);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Layout)) return false;
    Layout o = (Layout) other;
    return unknownFields().equals(o.unknownFields())
        && view.equals(o.view);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + view.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!view.isEmpty()) builder.append(", view=").append(view);
    return builder.replace(0, 2, "Layout{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Layout, Builder> {
    public List<View> view;

    public Builder() {
      view = Internal.newMutableList();
    }

    public Builder view(List<View> view) {
      Internal.checkElementsNotNull(view);
      this.view = view;
      return this;
    }

    @Override
    public Layout build() {
      return new Layout(view, super.buildUnknownFields());
    }
  }

  public static final class Value extends Message<Value, Value.Builder> {
    public static final ProtoAdapter<Value> ADAPTER = new ProtoAdapter_Value();

    private static final long serialVersionUID = 0L;

    public static final Double DEFAULT_NUMBER_VALUE = 0.0d;

    public static final String DEFAULT_STRING_VALUE = "";

    public static final Boolean DEFAULT_BOOL_VALUE = false;

    @WireField(
        tag = 1,
        adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
    )
    public final Double number_value;

    @WireField(
        tag = 2,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String string_value;

    @WireField(
        tag = 3,
        adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean bool_value;

    public Value(Double number_value, String string_value, Boolean bool_value) {
      this(number_value, string_value, bool_value, ByteString.EMPTY);
    }

    public Value(Double number_value, String string_value, Boolean bool_value, ByteString unknownFields) {
      super(ADAPTER, unknownFields);
      if (Internal.countNonNull(number_value, string_value, bool_value) > 1) {
        throw new IllegalArgumentException("at most one of number_value, string_value, bool_value may be non-null");
      }
      this.number_value = number_value;
      this.string_value = string_value;
      this.bool_value = bool_value;
    }

    @Override
    public Builder newBuilder() {
      Builder builder = new Builder();
      builder.number_value = number_value;
      builder.string_value = string_value;
      builder.bool_value = bool_value;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof Value)) return false;
      Value o = (Value) other;
      return unknownFields().equals(o.unknownFields())
          && Internal.equals(number_value, o.number_value)
          && Internal.equals(string_value, o.string_value)
          && Internal.equals(bool_value, o.bool_value);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (number_value != null ? number_value.hashCode() : 0);
        result = result * 37 + (string_value != null ? string_value.hashCode() : 0);
        result = result * 37 + (bool_value != null ? bool_value.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (number_value != null) builder.append(", number_value=").append(number_value);
      if (string_value != null) builder.append(", string_value=").append(string_value);
      if (bool_value != null) builder.append(", bool_value=").append(bool_value);
      return builder.replace(0, 2, "Value{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Value, Builder> {
      public Double number_value;

      public String string_value;

      public Boolean bool_value;

      public Builder() {
      }

      public Builder number_value(Double number_value) {
        this.number_value = number_value;
        this.string_value = null;
        this.bool_value = null;
        return this;
      }

      public Builder string_value(String string_value) {
        this.string_value = string_value;
        this.number_value = null;
        this.bool_value = null;
        return this;
      }

      public Builder bool_value(Boolean bool_value) {
        this.bool_value = bool_value;
        this.number_value = null;
        this.string_value = null;
        return this;
      }

      @Override
      public Value build() {
        return new Value(number_value, string_value, bool_value, super.buildUnknownFields());
      }
    }

    private static final class ProtoAdapter_Value extends ProtoAdapter<Value> {
      ProtoAdapter_Value() {
        super(FieldEncoding.LENGTH_DELIMITED, Value.class);
      }

      @Override
      public int encodedSize(Value value) {
        return (value.number_value != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(1, value.number_value) : 0)
            + (value.string_value != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.string_value) : 0)
            + (value.bool_value != null ? ProtoAdapter.BOOL.encodedSizeWithTag(3, value.bool_value) : 0)
            + value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, Value value) throws IOException {
        if (value.number_value != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 1, value.number_value);
        if (value.string_value != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.string_value);
        if (value.bool_value != null) ProtoAdapter.BOOL.encodeWithTag(writer, 3, value.bool_value);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public Value decode(ProtoReader reader) throws IOException {
        Builder builder = new Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.number_value(ProtoAdapter.DOUBLE.decode(reader)); break;
            case 2: builder.string_value(ProtoAdapter.STRING.decode(reader)); break;
            case 3: builder.bool_value(ProtoAdapter.BOOL.decode(reader)); break;
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public Value redact(Value value) {
        Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    }
  }

  public static final class Attributes extends Message<Attributes, Attributes.Builder> {
    public static final ProtoAdapter<Attributes> ADAPTER = new ProtoAdapter_Attributes();

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_KEY = "";

    public static final String DEFAULT_TYPE = "";

    @WireField(
        tag = 1,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String key;

    @WireField(
        tag = 2,
        adapter = "com.flipkart.android.proteus.models.proto.Layout$Value#ADAPTER"
    )
    public final Value value;

    @WireField(
        tag = 3,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String type;

    public Attributes(String key, Value value, String type) {
      this(key, value, type, ByteString.EMPTY);
    }

    public Attributes(String key, Value value, String type, ByteString unknownFields) {
      super(ADAPTER, unknownFields);
      this.key = key;
      this.value = value;
      this.type = type;
    }

    @Override
    public Builder newBuilder() {
      Builder builder = new Builder();
      builder.key = key;
      builder.value = value;
      builder.type = type;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof Attributes)) return false;
      Attributes o = (Attributes) other;
      return unknownFields().equals(o.unknownFields())
          && Internal.equals(key, o.key)
          && Internal.equals(value, o.value)
          && Internal.equals(type, o.type);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (key != null ? key.hashCode() : 0);
        result = result * 37 + (value != null ? value.hashCode() : 0);
        result = result * 37 + (type != null ? type.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (key != null) builder.append(", key=").append(key);
      if (value != null) builder.append(", value=").append(value);
      if (type != null) builder.append(", type=").append(type);
      return builder.replace(0, 2, "Attributes{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Attributes, Builder> {
      public String key;

      public Value value;

      public String type;

      public Builder() {
      }

      public Builder key(String key) {
        this.key = key;
        return this;
      }

      public Builder value(Value value) {
        this.value = value;
        return this;
      }

      public Builder type(String type) {
        this.type = type;
        return this;
      }

      @Override
      public Attributes build() {
        return new Attributes(key, value, type, super.buildUnknownFields());
      }
    }

    private static final class ProtoAdapter_Attributes extends ProtoAdapter<Attributes> {
      ProtoAdapter_Attributes() {
        super(FieldEncoding.LENGTH_DELIMITED, Attributes.class);
      }

      @Override
      public int encodedSize(Attributes value) {
        return (value.key != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.key) : 0)
            + (value.value != null ? Value.ADAPTER.encodedSizeWithTag(2, value.value) : 0)
            + (value.type != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.type) : 0)
            + value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, Attributes value) throws IOException {
        if (value.key != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.key);
        if (value.value != null) Value.ADAPTER.encodeWithTag(writer, 2, value.value);
        if (value.type != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.type);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public Attributes decode(ProtoReader reader) throws IOException {
        Builder builder = new Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.key(ProtoAdapter.STRING.decode(reader)); break;
            case 2: builder.value(Value.ADAPTER.decode(reader)); break;
            case 3: builder.type(ProtoAdapter.STRING.decode(reader)); break;
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public Attributes redact(Attributes value) {
        Builder builder = value.newBuilder();
        if (builder.value != null) builder.value = Value.ADAPTER.redact(builder.value);
        builder.clearUnknownFields();
        return builder.build();
      }
    }
  }

  public static final class View extends Message<View, View.Builder> {
    public static final ProtoAdapter<View> ADAPTER = new ProtoAdapter_View();

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_TYPE = "";

    @WireField(
        tag = 1,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String type;

    @WireField(
        tag = 2,
        adapter = "com.flipkart.android.proteus.models.proto.Layout$Attributes#ADAPTER",
        label = WireField.Label.REPEATED
    )
    public final List<Attributes> attributes;

    @WireField(
        tag = 3,
        adapter = "com.flipkart.android.proteus.models.proto.Layout$View#ADAPTER",
        label = WireField.Label.REPEATED
    )
    public final List<View> view;

    public View(String type, List<Attributes> attributes, List<View> view) {
      this(type, attributes, view, ByteString.EMPTY);
    }

    public View(String type, List<Attributes> attributes, List<View> view, ByteString unknownFields) {
      super(ADAPTER, unknownFields);
      this.type = type;
      this.attributes = Internal.immutableCopyOf("attributes", attributes);
      this.view = Internal.immutableCopyOf("view", view);
    }

    @Override
    public Builder newBuilder() {
      Builder builder = new Builder();
      builder.type = type;
      builder.attributes = Internal.copyOf("attributes", attributes);
      builder.view = Internal.copyOf("view", view);
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof View)) return false;
      View o = (View) other;
      return unknownFields().equals(o.unknownFields())
          && Internal.equals(type, o.type)
          && attributes.equals(o.attributes)
          && view.equals(o.view);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (type != null ? type.hashCode() : 0);
        result = result * 37 + attributes.hashCode();
        result = result * 37 + view.hashCode();
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (type != null) builder.append(", type=").append(type);
      if (!attributes.isEmpty()) builder.append(", attributes=").append(attributes);
      if (!view.isEmpty()) builder.append(", view=").append(view);
      return builder.replace(0, 2, "View{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<View, Builder> {
      public String type;

      public List<Attributes> attributes;

      public List<View> view;

      public Builder() {
        attributes = Internal.newMutableList();
        view = Internal.newMutableList();
      }

      public Builder type(String type) {
        this.type = type;
        return this;
      }

      public Builder attributes(List<Attributes> attributes) {
        Internal.checkElementsNotNull(attributes);
        this.attributes = attributes;
        return this;
      }

      public Builder view(List<View> view) {
        Internal.checkElementsNotNull(view);
        this.view = view;
        return this;
      }

      @Override
      public View build() {
        return new View(type, attributes, view, super.buildUnknownFields());
      }
    }

    private static final class ProtoAdapter_View extends ProtoAdapter<View> {
      ProtoAdapter_View() {
        super(FieldEncoding.LENGTH_DELIMITED, View.class);
      }

      @Override
      public int encodedSize(View value) {
        return (value.type != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.type) : 0)
            + Attributes.ADAPTER.asRepeated().encodedSizeWithTag(2, value.attributes)
            + View.ADAPTER.asRepeated().encodedSizeWithTag(3, value.view)
            + value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, View value) throws IOException {
        if (value.type != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.type);
        Attributes.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.attributes);
        View.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.view);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public View decode(ProtoReader reader) throws IOException {
        Builder builder = new Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.type(ProtoAdapter.STRING.decode(reader)); break;
            case 2: builder.attributes.add(Attributes.ADAPTER.decode(reader)); break;
            case 3: builder.view.add(View.ADAPTER.decode(reader)); break;
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public View redact(View value) {
        Builder builder = value.newBuilder();
        Internal.redactElements(builder.attributes, Attributes.ADAPTER);
        Internal.redactElements(builder.view, View.ADAPTER);
        builder.clearUnknownFields();
        return builder.build();
      }
    }
  }

  private static final class ProtoAdapter_Layout extends ProtoAdapter<Layout> {
    ProtoAdapter_Layout() {
      super(FieldEncoding.LENGTH_DELIMITED, Layout.class);
    }

    @Override
    public int encodedSize(Layout value) {
      return View.ADAPTER.asRepeated().encodedSizeWithTag(1, value.view)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Layout value) throws IOException {
      View.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.view);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Layout decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.view.add(View.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Layout redact(Layout value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.view, View.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
